# nginx/nginx.conf
# SDX Project Manager - Production Nginx Configuration
# High-performance reverse proxy with SSL termination and load balancing

# ============================================================================
# GLOBAL CONFIGURATION
# ============================================================================
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Maximum number of open files per worker process
worker_rlimit_nofile 65535;

events {
    # Maximum number of simultaneous connections per worker
    worker_connections 4096;
    
    # Use epoll for better performance on Linux
    use epoll;
    
    # Accept multiple connections at once
    multi_accept on;
}

# ============================================================================
# HTTP CONFIGURATION
# ============================================================================
http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ========================================================================
    # LOGGING CONFIGURATION
    # ========================================================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_real_ip":"$http_x_real_ip",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"http_x_forwarded_proto":"$http_x_forwarded_proto",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_status":"$upstream_status"'
        '}';

    access_log /var/log/nginx/access.log json_combined;

    # ========================================================================
    # PERFORMANCE OPTIMIZATION
    # ========================================================================
    
    # Sendfile optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Keepalive settings
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # Client settings
    client_max_body_size 200M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Proxy settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # FastCGI settings
    fastcgi_connect_timeout 60s;
    fastcgi_send_timeout 60s;
    fastcgi_read_timeout 60s;
    fastcgi_buffer_size 4k;
    fastcgi_buffers 8 4k;
    fastcgi_busy_buffers_size 8k;

    # ========================================================================
    # GZIP COMPRESSION
    # ========================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ========================================================================
    # SECURITY HEADERS
    # ========================================================================
    
    # Hide Nginx version
    server_tokens off;
    
    # Add security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ========================================================================
    # RATE LIMITING
    # ========================================================================
    
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # ========================================================================
    # UPSTREAM CONFIGURATION
    # ========================================================================
    
    # SDX Application upstream
    upstream sdx_app {
        least_conn;
        server sdx-app:8501 max_fails=3 fail_timeout=30s;
        # Add more app instances for load balancing:
        # server sdx-app-2:8501 max_fails=3 fail_timeout=30s;
        # server sdx-app-3:8501 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    # Monitoring upstream
    upstream monitoring {
        server grafana:3000;
        keepalive 16;
    }

    # ========================================================================
    # SERVER BLOCKS
    # ========================================================================

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name sdx.denso-innovation.com _;
        
        # Security headers
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect everything else to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS Main Server
    server {
        listen 443 ssl http2;
        server_name sdx.denso-innovation.com;

        # ====================================================================
        # SSL CONFIGURATION
        # ====================================================================
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL Security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # DNS resolver
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # ====================================================================
        # SECURITY CONFIGURATION
        # ====================================================================
        
        # Rate limiting
        limit_req zone=general burst=10 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # ====================================================================
        # MAIN APPLICATION
        # ====================================================================
        location / {
            # Rate limiting for main app
            limit_req zone=general burst=20 nodelay;
            
            # Proxy headers
            proxy_pass http://sdx_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket support for Streamlit
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # ====================================================================
        # API ENDPOINTS
        # ====================================================================
        location /api/ {
            # Strict rate limiting for API
            limit_req zone=api burst=50 nodelay;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "https://sdx.denso-innovation.com";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            
            proxy_pass http://sdx_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ====================================================================
        # AUTHENTICATION ENDPOINTS
        # ====================================================================
        location /auth/ {
            # Very strict rate limiting for auth
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://sdx_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ====================================================================
        # STATIC FILES
        # ====================================================================
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Security for static files
            location ~* \.(php|jsp|cgi|asp|aspx)$ {
                deny all;
            }
        }

        # ====================================================================
        # HEALTH CHECK
        # ====================================================================
        location /health {
            access_log off;
            proxy_pass http://sdx_app/health;
            proxy_set_header Host $host;
        }

        # ====================================================================
        # MONITORING ACCESS
        # ====================================================================
        location /monitoring/ {
            # Restrict access to monitoring
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            auth_basic "Monitoring Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://monitoring/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ====================================================================
        # SECURITY RULES
        # ====================================================================
        
        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to configuration files
        location ~* \.(conf|config|sql|bak|backup|swp|old|orig)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # ====================================================================
        # ERROR PAGES
        # ====================================================================
        error_page 400 401 402 403 404 /40x.html;
        location = /40x.html {
            root /var/www/error;
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/www/error;
            internal;
        }
    }

    # ========================================================================
    # ADDITIONAL SERVERS
    # ========================================================================
    
    # Monitoring server (internal access only)
    server {
        listen 8080;
        server_name monitoring.internal;
        
        # Restrict access
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        location / {
            proxy_pass http://monitoring;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}

# ============================================================================
# NGINX OPTIMIZATION NOTES
# ============================================================================
# 
# Performance Tuning:
# 1. Adjust worker_processes based on CPU cores
# 2. Tune worker_connections based on available memory
# 3. Configure appropriate buffer sizes
# 4. Enable HTTP/2 for better performance
# 5. Use SSL session resumption
# 
# Security Best Practices:
# 1. Keep Nginx updated
# 2. Use strong SSL configuration
# 3. Implement rate limiting
# 4. Hide server information
# 5. Restrict access to sensitive locations
# 
# Monitoring:
# 1. Monitor access and error logs
# 2. Set up log rotation
# 3. Use structured logging (JSON format)
# 4. Implement health checks
# 5. Monitor SSL certificate expiration
# 
# ============================================================================
# monitoring/prometheus.yml
# SDX Project Manager - Production Monitoring Configuration
# Comprehensive metrics collection for enterprise application monitoring

# ============================================================================
# GLOBAL CONFIGURATION
# ============================================================================
global:
  # How frequently to scrape targets by default
  scrape_interval: 15s

  # How long until a scrape request times out
  scrape_timeout: 10s

  # How frequently to evaluate rules
  evaluation_interval: 15s

  # External labels to add to all time series and alerts
  external_labels:
    cluster: 'sdx-production'
    environment: 'production'
    company: 'denso-innovation'
    project: 'sdx-project-manager'

# ============================================================================
# RULE FILES
# ============================================================================
rule_files:
  - 'rules/*.yml'
  - 'alerts/*.yml'

# ============================================================================
# ALERT MANAGER CONFIGURATION
# ============================================================================
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093
      timeout: 10s
      api_version: v2

# ============================================================================
# SCRAPE CONFIGURATIONS
# ============================================================================
scrape_configs:
  # ==========================================================================
  # PROMETHEUS SELF-MONITORING
  # ==========================================================================
  - job_name: 'prometheus'
    scrape_interval: 30s
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics
    scheme: http

  # ==========================================================================
  # SDX APPLICATION MONITORING
  # ==========================================================================
  - job_name: 'sdx-app'
    scrape_interval: 15s
    scrape_timeout: 10s
    static_configs:
      - targets: ['sdx-app:9090']
    metrics_path: /metrics
    scheme: http
    params:
      format: ['prometheus']

    # Relabeling for better metric organization
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'sdx_(.+)'
        target_label: __name__
        replacement: 'application_${1}'

    # Custom labels
    relabel_configs:
      - target_label: service
        replacement: 'sdx-project-manager'
      - target_label: component
        replacement: 'application'

  # ==========================================================================
  # DATABASE MONITORING
  # ==========================================================================
  - job_name: 'postgres-exporter'
    scrape_interval: 30s
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: /metrics

    relabel_configs:
      - target_label: service
        replacement: 'postgresql'
      - target_label: component
        replacement: 'database'

  # ==========================================================================
  # REDIS MONITORING
  # ==========================================================================
  - job_name: 'redis-exporter'
    scrape_interval: 30s
    static_configs:
      - targets: ['redis-exporter:9121']
    metrics_path: /metrics

    relabel_configs:
      - target_label: service
        replacement: 'redis'
      - target_label: component
        replacement: 'cache'

  # ==========================================================================
  # NGINX MONITORING
  # ==========================================================================
  - job_name: 'nginx-exporter'
    scrape_interval: 30s
    static_configs:
      - targets: ['nginx-exporter:9113']
    metrics_path: /metrics

    relabel_configs:
      - target_label: service
        replacement: 'nginx'
      - target_label: component
        replacement: 'proxy'

  # ==========================================================================
  # NODE/SYSTEM MONITORING
  # ==========================================================================
  - job_name: 'node-exporter'
    scrape_interval: 30s
    static_configs:
      - targets: ['node-exporter:9100']
    metrics_path: /metrics

    relabel_configs:
      - target_label: service
        replacement: 'system'
      - target_label: component
        replacement: 'infrastructure'

  # ==========================================================================
  # CELERY WORKER MONITORING
  # ==========================================================================
  - job_name: 'celery-exporter'
    scrape_interval: 30s
    static_configs:
      - targets: ['celery-exporter:9540']
    metrics_path: /metrics

    relabel_configs:
      - target_label: service
        replacement: 'celery'
      - target_label: component
        replacement: 'worker'

  # ==========================================================================
  # BLACKBOX MONITORING (External Health Checks)
  # ==========================================================================
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://sdx.denso-innovation.com
          - https://sdx.denso-innovation.com/health
          - https://sdx.denso-innovation.com/api/health

    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
      - target_label: service
        replacement: 'external-monitoring'
      - target_label: component
        replacement: 'health-check'

  # ==========================================================================
  # SSL CERTIFICATE MONITORING
  # ==========================================================================
  - job_name: 'blackbox-ssl'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
          - sdx.denso-innovation.com:443

    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
      - target_label: service
        replacement: 'ssl-monitoring'
      - target_label: component
        replacement: 'certificate'

  # ==========================================================================
  # CUSTOM APPLICATION METRICS
  # ==========================================================================
  - job_name: 'sdx-business-metrics'
    scrape_interval: 60s
    static_configs:
      - targets: ['sdx-app:9091'] # Custom metrics endpoint
    metrics_path: /business-metrics

    relabel_configs:
      - target_label: service
        replacement: 'sdx-business'
      - target_label: component
        replacement: 'kpi'

  # ==========================================================================
  # KUBERNETES MONITORING (if deployed on K8s)
  # ==========================================================================
  # - job_name: 'kubernetes-apiservers'
  #   kubernetes_sd_configs:
  #   - role: endpoints
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #   relabel_configs:
  #   - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
  #     action: keep
  #     regex: default;kubernetes;https
# ============================================================================
# RECORDING RULES
# ============================================================================
# Pre-computed queries for better performance
# These will be created in separate rule files

# Example recording rules (to be placed in rules/sdx_rules.yml):
# groups:
#   - name: sdx.rules
#     interval: 30s
#     rules:
#     - record: sdx:project_completion_rate
#       expr: |
#         (
#           sum(application_projects_completed_total) /
#           sum(application_projects_total)
#         ) * 100
#
#     - record: sdx:avg_response_time
#       expr: |
#         avg(rate(http_request_duration_seconds_sum[5m])) /
#         avg(rate(http_request_duration_seconds_count[5m]))
#
#     - record: sdx:error_rate
#       expr: |
#         (
#           sum(rate(http_requests_total{status=~"5.."}[5m])) /
#           sum(rate(http_requests_total[5m]))
#         ) * 100

# ============================================================================
# FEDERATION (for multi-cluster setups)
# ============================================================================
# - job_name: 'federate'
#   scrape_interval: 15s
#   honor_labels: true
#   metrics_path: '/federate'
#   params:
#     'match[]':
#       - '{job=~"prometheus|sdx-.*"}'
#       - '{__name__=~"job:.*"}'
#   static_configs:
#     - targets:
#       - 'prometheus-dev:9090'
#       - 'prometheus-staging:9090'

# ============================================================================
# REMOTE WRITE (for long-term storage)
# ============================================================================
# remote_write:
#   - url: "https://prometheus-remote-write.example.com/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# ============================================================================
# REMOTE READ (for historical data)
# ============================================================================
# remote_read:
#   - url: "https://prometheus-remote-read.example.com/api/v1/read"
#     basic_auth:
#       username: "username"
#       password: "password"

# ============================================================================
# STORAGE CONFIGURATION
# ============================================================================
# Storage settings are typically configured via command line flags:
# --storage.tsdb.retention.time=15d
# --storage.tsdb.retention.size=10GB
# --storage.tsdb.path=/prometheus

# ============================================================================
# METRIC RETENTION POLICIES
# ============================================================================
# Different retention for different metric types
# High frequency metrics: 7 days
# Business metrics: 90 days
# System metrics: 30 days

# ============================================================================
# MONITORING CONFIGURATION NOTES
# ============================================================================
#
# Performance Optimization:
# 1. Adjust scrape intervals based on metric importance
# 2. Use recording rules for complex queries
# 3. Implement metric relabeling to reduce cardinality
# 4. Configure appropriate retention policies
# 5. Use federation for multi-environment setups
#
# Security:
# 1. Use authentication for scrape endpoints
# 2. Implement TLS for secure communication
# 3. Restrict access to Prometheus UI
# 4. Use service discovery when possible
# 5. Regularly update Prometheus and exporters
#
# Alerting Strategy:
# 1. Define SLA-based alerts
# 2. Implement escalation policies
# 3. Use alert fatigue prevention
# 4. Test alert channels regularly
# 5. Document runbooks for alerts
#
# High Availability:
# 1. Run multiple Prometheus instances
# 2. Use external storage for long-term data
# 3. Implement proper backup strategies
# 4. Use load balancing for query distribution
# 5. Monitor Prometheus itself
#
# ============================================================================
